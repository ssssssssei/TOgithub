name: Terraform

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'

jobs:
  check-s3:
    name: 'Check S3 Updates'
    runs-on: ubuntu-latest
    outputs:
      s3_updated: ${{ steps.check-s3.outputs.updated }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Cache Last Modified State
        uses: actions/cache@v3
        with:
          path: last_modified_state.txt
          key: ${{ runner.os }}-s3-last-modified
          restore-keys: |
            ${{ runner.os }}-s3-last-modified

      - name: Check S3 File
        id: check-s3
        run: |
          BUCKET_NAME="onewonder-tfstate"
          FILE_PATH="github/iamusers.json"
      
          # 获取文件的最后修改时间
          LAST_MODIFIED=$(aws s3api head-object --bucket $BUCKET_NAME --key $FILE_PATH --query 'LastModified' --output text)
          echo "Last Modified: $LAST_MODIFIED"
      
          # 检查是否存在缓存的 last_modified_state.txt 文件
          if [ -f last_modified_state.txt ]; then
            PREVIOUS=$(cat last_modified_state.txt)
            if [ "$LAST_MODIFIED" == "$PREVIOUS" ]; then
              echo "updated=false" >> $GITHUB_OUTPUT
            else
              echo $LAST_MODIFIED > last_modified_state.txt
              echo "updated=true" >> $GITHUB_OUTPUT
            fi
          else
            echo $LAST_MODIFIED > last_modified_state.txt
            echo "updated=true" >> $GITHUB_OUTPUT
          fi
          
  update-github:
    name: 'Update JSON in GitHub'
    runs-on: ubuntu-latest
    needs: check-s3
    if: ${{ needs.check-s3.outputs.s3_updated == 'true' }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download JSON from S3
        run: |
          BUCKET_NAME="onewonder-tfstate"
          FILE_PATH="github/iamusers.json"
          aws s3 cp s3://$BUCKET_NAME/$FILE_PATH ./iamusers.json

      - name: Commit and Push Updated JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add iamusers.json
          git commit -m "Update iamusers.json from S3"
          git push

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: update-github
    if: ${{ needs.check-s3.outputs.s3_updated == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform
        run: terraform plan -out=tfplan
